import Head from 'next/head';
import { useState, useEffect } from 'react';

import {
  Flex,
  Input,
  Button,
  Table,
  Thead,
  Tr,
  Th,
  Tbody,
  Td,
  InputLeftAddon,
  InputGroup,
  Stack,
} from '@chakra-ui/react';

import { AiOutlineCloseSquare } from 'react-icons/ai';

export default function Home() {
  useEffect(() => {
    const localStorageTasks = JSON.parse(localStorage.getItem('users1'));
    const tasks =
      localStorage.getItem('users1') !== null ? localStorageTasks : [];
    console.log(tasks);

    setTasks([...tasks]);
  }, []);

  const [tasks, setTasks] = useState([]);
  const [newTaskEndereco, setNewTaskEndereco] = useState('');
  const [newTaskTelefone, setNewTaskTelefone] = useState('');
  const [newTaskCpf, setNewTaskCpf] = useState('');
  const [newTaskEmail, setNewTaskEmail] = useState('');
  const [newTaskTitle, setNewTaskTitle] = useState('');

  function handleCreateTask(e) {
    e.preventDefault();

    const newTask = {
      id: Math.random(),
      title: newTaskTitle,
      email: newTaskEmail,
      cpf: newTaskCpf,
      telefone: newTaskTelefone,
      endereco: newTaskEndereco,
      isComplete: false,
    };
    console.log(tasks);

    if (!newTask) return;

    alert('usuário criado, não esqueça de clicar em SALVAR!');

    setTasks((oldstate) => [...oldstate, newTask]);

    setNewTaskEmail('');
  }
  function salvarStorage() {
    localStorage.setItem('users1', JSON.stringify(tasks));
    window.location.reload();
  }

  return (
    <Flex justifyContent="center" alignItems="center" flexDirection="column">
      <Head>
        <title>X-solar</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex
        as="form"
        flexDirection="column"
        onSubmit={handleCreateTask}
        // className={styles.formContainer}
        // maxWidth='30rem'
        // width='100%'
        background="var(--gray-700)"
        border="2px solid #eba417"
        alignItems="center"
        mt="-30"
        borderRadius="8px"
        width="25rem"
      >
        <label style={{ marginTop: '10px' }} htmlFor="">
          <big style={{ color: '#eac74a' }}>Formulário</big>
        </label>

        <Flex mt="4" flexDirection="column">
          <Stack spacing="2">
            <Input
              color="gray.100"
              className="inputGroup"
              type="text"
              placeholder=""
              onChange={(e) => setNewTaskTitle(e.target.value)}
              value={newTaskTitle}
              focusBorderColor="yellow.200"
            />

            <label className="email" htmlFor="">
              E-mail
            </label>

            <Input
              color="gray.100"
              className="inputGroup"
              type="text"
              placeholder=""
              onChange={(e) => setNewTaskEmail(e.target.value)}
              value={newTaskEmail}
              focusBorderColor="yellow.200"
            />
            <label className="email" htmlFor="">
              CPF
            </label>

            <Input
              color="gray.100"
              className="inputGroup"
              type="text"
              placeholder=""
              onChange={(e) => setNewTaskCpf(e.target.value)}
              value={newTaskCpf}
              focusBorderColor="yellow.200"
            />
            <label className="email" htmlFor="">
              Telefone
            </label>

            <Input
              color="gray.100"
              className="inputGroup"
              type="text"
              placeholder=""
              onChange={(e) => setNewTaskTelefone(e.target.value)}
              value={newTaskTelefone}
              focusBorderColor="yellow.200"
            />
            <label className="email" htmlFor="">
              Endereço
            </label>

            <Input
              color="gray.100"
              className="inputGroup"
              type="text"
              placeholder=""
              onChange={(e) => setNewTaskEndereco(e.target.value)}
              value={newTaskEndereco}
              focusBorderColor="yellow.200"
            />
            <label className="email" htmlFor="">
              Endereço 2
            </label>
            <Input
              color="gray.100"
              className="inputGroup"
              type="text"
              placeholder=""
              onChange={(e) => setNewTaskEndereco(e.target.value)}
              value={newTaskEndereco}
              focusBorderColor="yellow.200"
            />

            <Button colorScheme="yellow" type="submit">
              Cadastrar
            </Button>
            <Button onClick={salvarStorage} colorScheme="green" type="button">
              Salvar
            </Button>
          </Stack>
        </Flex>
      </Flex>
      <Table>
        <Thead>
          <Tr>
            <Th>Nome </Th>
            <Th>E-mail </Th>
            <Th>CPF </Th>
            <Th>Telefone </Th>
            <Th>Endereço</Th>
            <Th>Endereço2</Th>
            <Th></Th>
          </Tr>
        </Thead>

        {tasks.map((task, key) => (
          <Tbody key={key}>
            <Tr>
              <Td>{task.title}</Td>
              <Td>{task.email} </Td>
              <Td>{task.cpf}</Td>
              <Td>{task.telefone}</Td>
              <Td>{task.endereco}</Td>
              <Td>{task.endereco}</Td>
              <Td>
                <AiOutlineCloseSquare color="red" />
              </Td>
            </Tr>
          </Tbody>
        ))}
      </Table>
    </Flex>
  );
}
